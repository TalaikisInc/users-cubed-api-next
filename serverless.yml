service: users-cubed-api
app: users-cubed-api
org: talaikis

plugins:
  - serverless-dotenv-plugin
  - serverless-apigw-binary
  - serverless-api-compression
  - serverless-plugin-log-retention
  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION}
  stage: ${env:STAGE}
  apiKeys:
    - ${env:API_KEY}
  apiGateway:
    apiKeySourceType: HEADER
    minimumCompressionSize: 1024
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
  functions:
    app:
      handler: index.handler
      environment:
        HASH_SECRET: ${env:HASH_SECRET}
        TWILIO_FROM: ${env:TWILIO_FROM}
        TWILIO_SID: ${env:TWILIO_SID}
        TWILIO_AUTH_TOKEN: ${env:TWILIO_AUTH_TOKEN}
        MAILGUN_FROM: ${env:MAILGUN_FROM}
        MAILGUN_DOMAIN: ${env:MAILGUN_DOMAIN}
        MAILGUN_KEY: ${env:MAILGUN_KEY}
        FACEBOOK_APP_ID: ${env:FACEBOOK_APP_ID}
        FACEBOOK_APP_SECRET: ${env:FACEBOOK_APP_SECRET}
        GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
        STRIPE_TEST_SECRET: ${env:STRIPE_TEST_SECRET}
        STRIPE_LIVE_SECRET: ${env:STRIPE_LIVE_SECRET}
        AUTH0_DOMAIN: ${env:AUTH0_DOMAIN}
        AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID}
      events:
        - http:
          path: /
          method: post
          private: true
          cors: true
provisionedConcurrency: 0

custom:
  bucket: <your-bucket-name>
  contentCompression: 1024
  logRetentionInDays: 30
  apigwBinary:
    types:
      - 'application/x-protobuf'
  alerts:
    dashboards: true
    nameTemplate: $[functionName]-$[metricName]-Alarm
    topics:
      ok: ${self:service}-${opt:stage}-alerts-ok
      alarm: ${self:service}-${opt:stage}-alerts-alarm
      insufficientData: ${self:service}-${opt:stage}-alerts-insufficientData
    definitions:
      functionErrors:
        period: 300
      customAlarm:
        description: 'My custom alarm'
        namespace: 'AWS/Lambda'
        nameTemplate: $[functionName]-Duration-IMPORTANT-Alarm
        metric: duration
        threshold: 200
        statistic: Average
        period: 300
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration
