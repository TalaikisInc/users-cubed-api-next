service: serverless-simple-http-endpoint
app: users-cubed-api-next
org: talaikis

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-log-retention
  - serverless-iam-roles-per-function

provider:
  name: aws
  region: ${env:REGION}
  runtime: ${env:LAMBDA_RUNTIME}
  allowed-stages:
    - dev
    - prod
  iamRoleStatementsName: cubed-${env:STAGE}-${self:app}-lambdaRole
  iamRoleStatements:
    - Effect: Allow
      Action:
       - s3:GetObject
       - s3:PutObject
       - s3:DeleteObject
       - s3:ListBucket
       - logs:CreateLogGroup
       - logs:CreateLogStream
       - logs:PutLogEvents
       - sns:Publish
      Resource: "*"

functions:
  cubed:
    handler: index.handler
    name: ${env:LAMBDA_NAME}
    environment:
      HASH_SECRET: ${env:HASH_SECRET}
      TWILIO_FROM: ${env:TWILIO_FROM}
      TWILIO_SID: ${env:TWILIO_SID}
      TWILIO_AUTH_TOKEN: ${env:TWILIO_AUTH_TOKEN}
      MAILGUN_FROM: ${env:MAILGUN_FROM}
      MAILGUN_DOMAIN: ${env:MAILGUN_DOMAIN}
      MAILGUN_KEY: ${env:MAILGUN_KEY}
      STRIPE_TEST_SECRET: ${env:STRIPE_TEST_SECRET}
      STRIPE_LIVE_SECRET: ${env:STRIPE_LIVE_SECRET}
      AUTH0_DOMAIN: ${env:AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID}
      ENCRYPTION_SALT: ${env:ENCRYPTION_SALT}
      ENCRYPTION_PASSWORD: ${env:ENCRYPTION_PASSWORD}
      API_KEY: ${env:API_KEY}
      BUCKET: ${env:BUCKET}
      NODE_ENV: ${env:NODE_ENV}
    events:
      - http:
          path: cubed
          method: post
          cors: true

custom:
  logRetentionInDays: 1
  serverless-offline:
    apiKey: ${env:API_KEY}
    port: 4000

package:
  exclude:
    - git/**
    - tests/**
    - out/**
    - .nyc_output/**
    - init/
    - resources
    - .eslintrc.js
    - .gitignore
    - .node-version
    - .nvmrc
    - commitlint.config.js
    - README.md
